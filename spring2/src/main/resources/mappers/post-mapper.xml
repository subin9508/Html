<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.itwill.spring2.repository.PostDao">
  
    <!-- posts 테이블 전체 검색. 목록 보기. -->
    <select id="selectOrderByIdDesc" resultType="Post">
        select * from posts order by id desc
    </select>
    
    <!-- posts 테이블에서 id(PK)로 검색. 상세보기. -->
    <select id="selectById" resultType="Post">
        select * from posts where id = #{id} <!-- myBatis에서는 ? 대신 #{} 형식으로 작성, #{}가 selectById() 메서드의 아규먼트가 들어올 자리임을 명시. -->
    </select>
    
    <!-- posts 테이블에 행 삽입. 새 글 작성. -->
    <!-- insert, update, delete는 리턴 타입이 행의 개수를 리턴하기 때문에 항상 int. 따라서 resultType을 지정할 필요 없음. -->
    <insert id="insertPost"> <!-- id가 곧 메서드 이름 -->
        insert into posts (title, content, author)
        values (#{title}, #{content}, #{author}) <!-- Model 담당 클래스의 필드 이름과 같아야 함. (getter, setter 호출하기 위해) -->
        <!-- # : prepateStatement의 ?(물음표), bind에 들어갈 변수의 이름 -->
        <!-- #{}에는 jsp에서 stmt.setString( 1/2/3 , post.getTitle()/Content()/Author()); 의 과정을 거친 값을 해당 #{}에 할당한다고 보면 됨. -->
    </insert>
    
    <!-- posts 테이블에서 해당 id의 제목과 내용, 수정시간 업데이트. -->
    <update id="updatePost">
        update posts set title = #{title}, content = #{content}, modified_time = systimestamp where id = #{id}
    </update>
    
    
    <!-- posts 테이블에서 해당 id의 행을 삭제. -->
    <delete id="deletePost">
        delete from posts where id = #{id}
    </delete>
    
    <!-- posts 테이블에서 제목/내용/작성자로 검색. -->
    <select id="search" resultType="Post">
        <bind name="searchKeyword" value="'%' + keyword + '%'" /> <!-- 제목/내용/작성자로 검색 시(like 검색 시) where절 검색어
        앞뒤로 % 붙이고 작성. --> <!-- bind: 변수 선언이라고 생각. -->
        <!-- keyword의 의미는 param.getKeyword() -->
        select * from posts 
        <where>
            <choose>
                <when test='category.equals("t")'> <!-- xml, html은 속성 값에서 큰 따옴표, 작은 따옴표 구분 x  -->
                <!-- 'category.equals("t")' : 아규먼트로 문자열을 넘겨야 하기 때문에 바깥 쪽이 작은 따옴표, 안 쪽이 큰 따옴표. -->
                <!-- category의 의미는 param.getCategory() -->    
                    upper(title) like upper(#{searchKeyword})
                    <!-- mapper.xml에서 #은 prepareStatement의 ?에 해당 -->
                </when>
                <when test='category.equals("c")'>
                    upper(content) like upper(#{searchKeyword})
                </when>
                <when test='category.equals("tc")'>
                    upper(title) like upper(#{searchKeyword})
                    or
                    upper(content) like upper(#{searchKeyword})
                </when>
                <when test='category.equals("a")'>
                    upper(author) like upper(#{searchKeyword})
                </when>
            </choose>
        </where>
        order by id desc
    </select>
    
  </mapper>